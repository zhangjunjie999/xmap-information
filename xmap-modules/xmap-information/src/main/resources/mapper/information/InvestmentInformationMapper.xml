<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xmap.information.mapper.InvestmentInformationMapper">
    
    <resultMap type="InvestmentInformation" id="InvestmentInformationResult">
        <result property="investmentId"    column="Investment_id"    />
        <result property="title"    column="title"    />
        <result property="content"    column="content"    />
        <result property="creator"    column="creator"    />
        <result property="createTime"    column="create_time"    />
        <result property="status"    column="status"    />
        <result property="workSynchronization"    column="work_synchronization"    />
    </resultMap>

    <sql id="selectInvestmentInformationVo">
        select Investment_id, title, content, creator, create_time, status, work_synchronization from investment_information_list
    </sql>

    <select id="selectInvestmentInformationList" parameterType="InvestmentInformation" resultMap="InvestmentInformationResult">
        <include refid="selectInvestmentInformationVo"/>
        <where>  
            <if test="title != null  and title != ''"> and title = #{title}</if>
            <if test="content != null  and content != ''"> and content = #{content}</if>
            <if test="creator != null  and creator != ''"> and creator = #{creator}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="workSynchronization != null  and workSynchronization != ''"> and work_synchronization = #{workSynchronization}</if>
        </where>
    </select>
    
    <select id="selectInvestmentInformationByInvestmentId" parameterType="Long" resultMap="InvestmentInformationResult">
        <include refid="selectInvestmentInformationVo"/>
        where Investment_id = #{investmentId}
    </select>
        
    <insert id="insertInvestmentInformation" parameterType="InvestmentInformation" useGeneratedKeys="true" keyProperty="investmentId">
        insert into investment_information_list
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null and title != ''">title,</if>
            <if test="content != null and content != ''">content,</if>
            <if test="creator != null and creator != ''">creator,</if>
            <if test="createTime != null">create_time,</if>
            <if test="status != null and status != ''">status,</if>
            <if test="workSynchronization != null and workSynchronization != ''">work_synchronization,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="title != null and title != ''">#{title},</if>
            <if test="content != null and content != ''">#{content},</if>
            <if test="creator != null and creator != ''">#{creator},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="workSynchronization != null and workSynchronization != ''">#{workSynchronization},</if>
         </trim>
    </insert>

    <update id="updateInvestmentInformation" parameterType="InvestmentInformation">
        update investment_information_list
        <trim prefix="SET" suffixOverrides=",">
            <if test="title != null and title != ''">title = #{title},</if>
            <if test="content != null and content != ''">content = #{content},</if>
            <if test="creator != null and creator != ''">creator = #{creator},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="workSynchronization != null and workSynchronization != ''">work_synchronization = #{workSynchronization},</if>
        </trim>
        where Investment_id = #{investmentId}
    </update>

    <delete id="deleteInvestmentInformationByInvestmentId" parameterType="Long">
        delete from investment_information_list where Investment_id = #{investmentId}
    </delete>

    <delete id="deleteInvestmentInformationByInvestmentIds" parameterType="String">
        delete from investment_information_list where Investment_id in 
        <foreach item="investmentId" collection="array" open="(" separator="," close=")">
            #{investmentId}
        </foreach>
    </delete>
</mapper>